:py:mod:`pyrestsdk.credential`
==============================

.. py:module:: pyrestsdk.credential

.. autoapi-nested-parse::

   Credentials



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   _abstract_basic_credential/index.rst
   _abstract_credential/index.rst
   _abstract_kerbrose_credential/index.rst
   _abstract_token_credential/index.rst
   _basic_credential/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   pyrestsdk.credential.AbstractBasicCredential
   pyrestsdk.credential.AbstractCredential
   pyrestsdk.credential.AbstractTokenCredential
   pyrestsdk.credential.AbstractKerbroseCredential
   pyrestsdk.credential.BasicCredential




.. py:class:: AbstractBasicCredential(username: str, password: str)

   Bases: :py:obj:`pyrestsdk.credential._abstract_credential.AbstractCredential`

   Abstract Basic Credential Type

   .. py:method:: get_basic(/) -> str
      :abstractmethod:

      Gets the basic credential encoded string


   .. py:method:: to_native_string(string: Union[str, bytes], encoding='ascii') -> str
      :abstractmethod:

      Given a string object, regardless of type, returns a representation of
      that string in the native string type, encoding and decoding where
      necessary. This assumes ASCII unless told otherwise.



.. py:class:: AbstractCredential

   Bases: :py:obj:`abc.ABC`

   Abstract Credential Type


.. py:class:: AbstractTokenCredential

   Bases: :py:obj:`pyrestsdk.credential._abstract_credential.AbstractCredential`

   Abstract Token Credential Type

   .. py:method:: get_token(/) -> A
      :abstractmethod:

      Gets the access token



.. py:class:: AbstractKerbroseCredential

   Bases: :py:obj:`pyrestsdk.credential._abstract_credential.AbstractCredential`

   Abstract Kerbrose Credential Type

   .. py:method:: get_principle(/) -> str
      :abstractmethod:

      Gets the principle information for authing



.. py:class:: BasicCredential(username: str, password: str)

   Bases: :py:obj:`pyrestsdk.credential._abstract_basic_credential.AbstractBasicCredential`

   Basic Authentication Credential Type

   .. py:method:: to_native_string(string: Union[str, bytes], encoding='ascii') -> str

      Converts native to string

      Args:
          string (Union[str, bytes]): The string to convert
          encoding (str, optional): The encoding type. Defaults to "ascii".

      Returns:
          str: The converted string


   .. py:method:: get_basic(/) -> str

      Gets the basic auth header value

      Returns:
          str: The basic auth header value



